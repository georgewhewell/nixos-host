--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -46,76 +46,36 @@ add_subdirectory(examples)
 # Packaging
 ##############################################################################
 
-# parse /etc/os-release
-file(READ "/etc/os-release" os_version)
-string(REPLACE "\n" ";" os_version ${os_version})
-foreach(_ver ${os_version})
-  string(REPLACE "=" ";" _ver ${_ver})
-  list(GET _ver 0 _name)
-  list(GET _ver 1 _value)
-  set(OS_${_name} ${_value})
-endforeach()
-
-  # extract version from git
-execute_process(
-  COMMAND git describe --long --match v*
-  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
-  OUTPUT_VARIABLE VER
-  OUTPUT_STRIP_TRAILING_WHITESPACE
-)
-string(REGEX REPLACE "v(.*)-([0-9]+)-(g[0-9a-f]+)" "\\1;\\2;\\3" VER ${VER})
-list(GET VER 0 tag)
-list(GET VER 1 commit_num)
-list(GET VER 2 commit_name)
-
-#define DEB and RPM version numbers
-if(${commit_num} EQUAL 0)
-  set(deb_ver "${tag}")
-  set(rpm_ver "${tag}")
-else()
-  if (DEFINED ENV{BUILD_NUMBER})
-    set(deb_ver "${tag}~${commit_num}-${commit_name}~b$ENV{BUILD_NUMBER}")
-    set(rpm_ver "${tag}~${commit_num}_${commit_name}~b$ENV{BUILD_NUMBER}")
-  else()
-    set(deb_ver "${tag}~${commit_num}-${commit_name}")
-    set(rpm_ver "${tag}~${commit_num}_${commit_name}")
-  endif()
-endif()
-
 set(CPACK_PACKAGE_NAME "memif")
-set(CPACK_STRIP_FILES OFF)
 set(CPACK_PACKAGE_VENDOR "fd.io")
-set(CPACK_COMPONENTS_IGNORE_GROUPS 1)
-set(CPACK_${CPACK_GENERATOR}_COMPONENT_INSTALL ON)
-set(CPACK_${type}_PACKAGE_DESCRIPTION "memif Shared Memory Interface")
-set(CPACK_${type}_PACKAGE_RELEASE 1)
-
-if(OS_ID_LIKE MATCHES "debian")
-  set(CPACK_GENERATOR "DEB")
-  set(type "DEBIAN")
-  set(CPACK_PACKAGE_VERSION "${deb_ver}")
-  set(CPACK_DEBIAN_PACKAGE_MAINTAINER "VPP Team")
-  execute_process(
-    COMMAND dpkg --print-architecture
-    OUTPUT_VARIABLE CPACK_DEBIAN_PACKAGE_ARCHITECTURE
-    OUTPUT_STRIP_TRAILING_WHITESPACE
-  )
-  set(CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_NAME}_${CPACK_PACKAGE_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE})
-elseif(OS_ID_LIKE MATCHES "rhel")
-  set(CPACK_GENERATOR "RPM")
-  set(type "RPM")
-  set(CPACK_PACKAGE_VERSION "${rpm_ver}")
-  execute_process(
-    COMMAND uname -m
-    OUTPUT_VARIABLE CPACK_RPM_PACKAGE_ARCHITECTURE
-    OUTPUT_STRIP_TRAILING_WHITESPACE
+set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "memif Shared Memory Interface")
+set(CPACK_SET_DESTDIR true)
+
+set(PKG_CONFIG_REQUIRES)
+set(PKG_CONFIG_LIBDIR "\${prefix}/lib")
+set(PKG_CONFIG_INCLUDEDIR "\${prefix}/include")
+set(PKG_CONFIG_LIBS)
+set(PKG_CONFIG_CFLAGS "-I\${includedir}")
+
+configure_file(
+  "${CMAKE_CURRENT_SOURCE_DIR}/pkg-config.pc.cmake"
+  "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}.pc"
   )
-  set(CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}.${CPACK_RPM_PACKAGE_ARCHITECTURE})
-endif()
 
-if(CPACK_GENERATOR)
-  include(CPack)
-else()
-  message(ERROR "CPACK_GENERATOR must be set")
-endif()
+include(CPack)
 
+include(GNUInstallDirs)
+
+install(
+  TARGETS ${PROJECT_NAME}
+  EXPORT ${PROJECT_NAME}-config)
+
+install(
+  EXPORT ${PROJECT_NAME}-config
+  NAMESPACE ${PROJECT_NAME}::
+  DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}
+  )
+
+INSTALL(FILES "${CMAKE_BINARY_DIR}/${PROJECT_NAME}.pc"
+  DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig
+  )
--- /dev/null
+++ b/pkg-config.pc.cmake
@@ -0,0 +1,9 @@
+Name: ${PROJECT_NAME}
+Description: ${CPACK_PACKAGE_DESCRIPTION_SUMMARY}
+Version: ${CPACK_PACKAGE_VERSION}
+Requires: ${PKG_CONFIG_REQUIRES}
+prefix=${CMAKE_INSTALL_PREFIX}
+includedir=${PKG_CONFIG_INCLUDEDIR}
+libdir=${PKG_CONFIG_LIBDIR}
+Libs: ${PKG_CONFIG_LIBS}
+Cflags: ${PKG_CONFIG_CFLAGS}
-- 
2.33.1

